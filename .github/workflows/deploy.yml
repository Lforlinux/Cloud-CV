name: Deploy Cloud CV to AWS

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  AWS_REGION: us-east-1
  TERRAFORM_VERSION: 1.6.0

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Terraform Init
      working-directory: infra/terraform
      run: terraform init
      
    - name: Terraform Plan
      working-directory: infra/terraform
      run: terraform plan
      
    - name: Terraform Apply
      working-directory: infra/terraform
      run: terraform apply -auto-approve
      
    - name: Get Terraform Outputs
      id: terraform-outputs
      working-directory: infra/terraform
      run: |
        echo "bucket_name=$(terraform output -raw bucket_name)" >> $GITHUB_OUTPUT
        echo "cloudfront_domain_name=$(terraform output -raw cloudfront_domain_name)" >> $GITHUB_OUTPUT
        echo "api_gateway_url=$(terraform output -raw api_gateway_url)" >> $GITHUB_OUTPUT
        echo "cloudfront_distribution_id=$(terraform output -raw cloudfront_distribution_id)" >> $GITHUB_OUTPUT
        
    - name: Upload Frontend Files
      run: |
        aws s3 cp frontend/index.html s3://${{ steps.terraform-outputs.outputs.bucket_name }}/ --content-type "text/html"
        aws s3 cp frontend/styles.css s3://${{ steps.terraform-outputs.outputs.bucket_name }}/ --content-type "text/css"
        aws s3 cp cv.pdf s3://${{ steps.terraform-outputs.outputs.bucket_name }}/ --content-type "application/pdf"
        
    - name: Update and Upload Script.js
      run: |
        echo "Updating script.js with API Gateway URL..."
        
        # Create a backup of the original script
        cp frontend/script.js frontend/script.js.backup
        
        # Update the API URL in the script (more robust regex)
        sed -i "s|this\.apiUrl = '[^']*'|this.apiUrl = '${{ steps.terraform-outputs.outputs.api_gateway_url }}/visitor-count'|g" frontend/script.js
        
        # Verify the script is valid JavaScript
        echo "Validating JavaScript syntax..."
        node -c frontend/script.js || {
          echo "‚ùå JavaScript syntax error detected, restoring backup"
          mv frontend/script.js.backup frontend/script.js
          exit 1
        }
        
        echo "‚úÖ JavaScript syntax is valid"
        
        # Upload the updated script
        echo "Uploading updated script.js to S3..."
        aws s3 cp frontend/script.js s3://${{ steps.terraform-outputs.outputs.bucket_name }}/ --content-type "application/javascript"
        
        # Restore the original script
        mv frontend/script.js.backup frontend/script.js
        
        echo "‚úÖ Script.js updated and uploaded successfully"
        
    - name: Invalidate CloudFront Cache
      if: steps.terraform-outputs.outputs.cloudfront_distribution_id != ''
      run: |
        echo "Invalidating CloudFront cache for updated files..."
        aws cloudfront create-invalidation \
          --distribution-id ${{ steps.terraform-outputs.outputs.cloudfront_distribution_id }} \
          --paths "/index.html" "/script.js" "/styles.css" "/cv.pdf"
        
        echo "CloudFront cache invalidation initiated. Changes will be live in a few minutes."
          
    - name: Set Website Permissions
      run: |
        aws s3 website s3://${{ steps.terraform-outputs.outputs.bucket_name }} --index-document index.html --error-document index.html
        
    - name: Deployment Summary
      run: |
        echo "üéâ Cloud CV Deployment Complete!"
        echo ""
        echo "üìä Deployment Details:"
        echo "  S3 Bucket: ${{ steps.terraform-outputs.outputs.bucket_name }}"
        echo "  CloudFront URL: https://${{ steps.terraform-outputs.outputs.cloudfront_domain_name }}"
        echo "  API Gateway URL: ${{ steps.terraform-outputs.outputs.api_gateway_url }}"
        echo ""
        echo "üåê Your Cloud CV is now live!"
        echo "  Main URL: https://${{ steps.terraform-outputs.outputs.cloudfront_domain_name }}"